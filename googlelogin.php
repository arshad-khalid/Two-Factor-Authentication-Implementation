<!DOCTYPE html>

<html lang="en">

<head>
<meta charset="UTF-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1.0">

<title> Verify | 2FA</title>

<link rel="stylesheet" href="./Font-Awesome-master/css/all.min.css">
<link rel="stylesheet" href="./css/bootstrap.min.css">

<script src="./js/jquery-3.6.0.min.js"></script>
<script src="./js/popper.min.js"></script>
<script src="./js/bootstrap.min.js"></script>
<script src="./Font-Awesome-master/js/all.min.js"></script>

<style>
html,body{
    height:100%;
    width:100%;
    }
main{
    height:100%;
    display:flex;
    flex-flow:column;
    }
</style>

</head>
<body>

<main>
<nav class="navbar navbar-expand-lg navbar-light bg-warning bg-gradient" id="topNavBar">
<div class="container">
<a class="navbar-brand" href="#">Moodle - APU</a>
</div>

</nav>
<div class="container py-3" id="page-container">
<div class="row justify-content-center">
<div class="col-lg-5 col-md-8 col-sm-12 col-xs-12">
<div class="card shadow rounded-0">
<div class="card-body py-4">

<h1>Authenticator verification </h1>
                        
<?php
/*
this script is a PHP implementation of two-factor authentication using an authenticator
here, the user's email address is used to generate a code by an authenticator app on the user's mobile device
*/


require_once 'gauth.php';

//create new instance of authenticator class, which is used to interact with the authenticator app
$ga = new Authenticator();
                        
//assign the values of the email and code fields from the POST request, if they exist
$email = (isset($_POST['email'])) ? strtolower(trim($_POST['email'])) : false;
$code = (isset($_POST['code'])) ? strtolower(trim($_POST['code'])) : false;

//the $action and $app_name variables are also defined to get the type of action
$action =  (isset($_GET['action'])) ? strtolower(trim($_GET['action'])) : '' ;
$app_name = "Moodle - 2FA";
                        
// part3 -- test the code againsts Google Authenticator
if ($action == 'part3') {

    //check to see if file with the name of the user's email address (hashed using md5() function) exists
    if (!file_exists(md5($email))) { 
        
        //if the file does not exist, the show_error() function is called with the error message "unknown account"
        show_error("Unknown account"); 
    }
        //If the $code variable is not set, the show_error() function is called with the error message "code cannot be empty"
        if (!$code) { 
            show_error("Code cannot be empty"); 
        }  
    
    //$secret_key variable is assigned the contents of the file with the name of the user's email address 
    $secret_key = file_get_contents(md5($email));

    //verifyCode() method of the $ga object is called with the $secret_key, $code and '2' as arguments 
    //the method verifies that the code entered by the user matches the code generated by the authenticator
    //the '2' argument specifies a clock tolerance of 2 * 30 seconds
    $checkResult = $ga->verifyCode($secret_key, $code, 2);

        //if the code is correct (verifyCode() method returns true), the user is redirected 
        //to either the index_admin.php page or the index.php page, depending on whether their email 
        //address is arshadkhalid.15@icloud.com (admin) or not
        if ($checkResult) {
            if ($email=='arshadkhalid.15@icloud.com'){
                header("Location: index_admin.php");}
            else{header("Location: index.php");
            }  
        } else {
            //if code is incorrect, the show_error() function is called with the error message
            show_error("Wrong code. Please try again.");
        }
                    
// if user is already registered to use authenticator, just request for code, if not, register the user
} elseif ($action == 'part2') {

    //if $email variable is not empty and its value is a valid email address, this code block will be executed
    if ($email && filter_var($email, FILTER_VALIDATE_EMAIL)) {

        //if file with the name of the MD5 hash of the $email variable exists, this code block will be executed
        //this indicates that the user has already registered for two-factor authentication with the app
        if (file_exists(md5($email))) {

            //display a welcome message and a form where the user can enter the code generated by their authenticator app
            echo "Welcome! $email, Enter the code for $app_name from your Google Authenticator App<br>";
            echo "<form action='googlelogin.php?action=part3' method='post'>";
            echo "<input type='text' name='email' value='$email' style='width: 250px' readonly /><br />";
            echo "\n\n";
            echo "<input type='text' name='code' style='width: 250px'/><br />";
            echo "\n\n";
            echo "<br>";
            echo "<button type='submit'>Submit</button>";
            echo "\n\n";
            echo '<a href="googlelogin.php"> Back </a>';
            echo "</form>";
        } 
        
        //if the file does not exist, this code block will be executed 
        //indication that the user is using two-factor authentication scheme for the first time
        else {

            //secret key is generated using the 'createSecret' method of the $ga object
            $secret_key = $ga->createSecret();
            $account = $email.' - '.$app_name;

            //secret key is saved to a file with the name of the MD5 hash of the $email variable
            file_put_contents(md5($email), $secret_key);
            echo "Hmm...this seems to be your first time using $app_name verification.<br/>";
            echo "Scan the QR code below with your Authenticator App.<br/>";

            //qr code and a secret key are displayed, which the user can use to set up their authenticator app
            $qrCodeUrl = $ga->getQRCodeUrl($account, $secret_key);
            echo "<img src='$qrCodeUrl' /><br />";
            echo "\n\n";
            echo "or enter this code manually into Google Authenticator<br/>";
            echo "Your Account : $account<br/>";
            echo "Your Key : $secret_key<br/>";
            echo "When you are ready, click the button below.<br />";
            echo "<form action='googlelogin.php?action=part2' method='post'>";
            echo "<input type='hidden' name='email' value='$email' />";
            echo "<button type='submit'>CONTINUE</button>";
            echo "</form>";
        }
    } else {
        //$email variable is empty or its value is not a valid email address, an error message is displayed
        show_error("Invalid email format");
    }
} else {
    //ask for email again to proceed with verification
    echo "Enter your email address once again to proceed with the verification.";
    echo "<form action='googlelogin.php?action=part2' method='post'>";
    echo "<input type='text' name='email' style='width: 250px' value='' />";
    echo "\n\n";
    echo "<button type='submit'>Authenticate</button>";
    echo "</form>";   
    }
    
    //show_error function that takes an error message as an argument and displays the error message 
    //with a link to retry the authentication process
    function show_error($errmessage){
        echo $errmessage.'<br/>';
        echo '<a href="googlelogin.php"> Retry </a>';
    }
?>
</div>
</div>
</div>
</div>
</div>
</main>
</body>
</html>




